{{ if and .Values.usePassword (not .Values.existingSecret) -}}
{{- $secretName := include "eric-cnom-document-database-mg.name" . }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    app.kubernetes.io/name: {{ template "eric-cnom-document-database-mg.name" . }}
    app.kubernetes.io/version: {{ template "eric-cnom-document-database-mg.version" . }}
    app.kubernetes.io/instance : {{ .Release.Name }}
    chart: {{ template "eric-cnom-document-database-mg.chart" . }}
    heritage: "{{ .Release.Service }}"
  annotations:
    {{- include "eric-cnom-document-database-mg.product-info" . | nindent 4 }}
type: Opaque
data:
  # Check if a password secret already exists, to avoid changing it on every 'helm upgrade'
  {{- $oldSecret := lookup "v1" "Secret" .Release.Namespace $secretName }}
  {{- if .Values.mongodbRootPassword }}
  mongodb-root-password: {{ .Values.mongodbRootPassword | b64enc | quote }}
  {{- else if $oldSecret }}
  mongodb-root-password: {{ index $oldSecret.data "mongodb-root-password" }}
  {{- else }}
  mongodb-root-password: {{ randAlphaNum 10 | b64enc | quote }}
  {{- end }}
  {{- if .Values.mongodbUsername }}
  mongodb-user: {{ .Values.mongodbUsername | b64enc | quote }}
  {{- if .Values.mongodbPassword }}
  mongodb-password: {{ .Values.mongodbPassword | b64enc | quote }}
  {{- else if $oldSecret }}
  mongodb-password: {{ index $oldSecret.data "mongodb-password" }}
  {{- else }}
  mongodb-password: {{ randAlphaNum 10 | b64enc | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.replicaSet.enabled }}
  {{- if .Values.replicaSet.key }}
  mongodb-replica-set-key: {{ .Values.replicaSet.key | b64enc | quote }}
  {{- else }}
  mongodb-replica-set-key: {{ randAlphaNum 10 | b64enc | quote }}
  {{- end }}
  {{- end }}
{{- end }}
