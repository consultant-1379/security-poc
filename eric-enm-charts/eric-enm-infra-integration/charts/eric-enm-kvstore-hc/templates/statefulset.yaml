apiVersion: "apps/v1"
kind: StatefulSet
metadata:
  name: {{ .Values.service.name.main }}
  labels:
    app.kubernetes.io/name: "{{ .Values.service.name.main }}"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ template "eric-enm-kvstore-hc.chart" . }}
  annotations:
{{- include "eric-enm-kvstore-hc.product-info" . | indent 4 }}
spec:
  serviceName: {{ .Values.service.name.main }}
  replicas: {{ template "eric-enm-kvstore-hc.replicas" . }}
  selector:
    matchLabels:
      app: {{ .Values.service.name.main }}
{{- if .Values.updateStrategy }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  {{- if .Values.updateStrategy.rollingUpdate }}
    rollingUpdate:
      partition: {{ .Values.updateStrategy.rollingUpdate.partition }}
  {{- end }}
{{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name.main }}
        app.kubernetes.io/name: "{{ .Values.service.name.main }}"
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/version: {{ template "eric-enm-kvstore-hc.chart" . }}
{{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
{{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
{{- end }}
{{- if .Values.affinity }}
      affinity:
        podAntiAffinity:
          {{ .Values.affinity }}:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name.main }}
            topologyKey: "kubernetes.io/hostname"
{{- end }}
{{- if or .Values.nodeSelector .Values.global.nodeSelector }}
      nodeSelector:
{{- if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.global.nodeSelector }}
{{ toYaml .Values.global.nodeSelector | indent 8 }}
{{- end }}
{{- end }}
{{- if or .Values.tolerations .Values.global.tolerations }}
      tolerations:
{{- if .Values.tolerations }}
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.global.tolerations }}
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
{{- end }}
{{- if or .Values.extraInitContainers .Values.images.waitInitContainer.enabled .Values.images.enmInitContainer.enabled }}
      initContainers:
{{- if .Values.images.waitInitContainer.enabled }}
      - name: {{ .Values.service.name.main }}-wait
        image: {{ template "eric-enm-kvstore-hc.registryUrl" . }}/{{ .Values.imageCredentials.repoPath }}/{{ index .Values "images" "waitInitContainer" "name" }}:{{ index .Values "images" "waitInitContainer" "tag" }}
        imagePullPolicy: {{ .Values.imageCredentials.pullPolicy }}
        command: {{ index .Values "images" "waitInitContainer" "command" }}
{{- if and .Values.waitInitContainerEnv.enabled .Values.images.waitInitContainer.enabled  }}
        env:
{{ toYaml .Values.waitInitContainerEnv.env | indent 10 }}
{{- end }}
{{- end }}
{{- if .Values.images.enmInitContainer.enabled }}
      - name: {{ .Values.service.name.main }}-enm
        image: {{ template "eric-enm-kvstore-hc.registryUrl" . }}/{{ .Values.imageCredentials.repoPath }}/{{ index .Values "images" "enmInitContainer" "name" }}:{{ index .Values "images" "enmInitContainer" "tag" }}
        imagePullPolicy: {{ .Values.imageCredentials.pullPolicy }}
        command: {{ index .Values "images" "enmInitContainer" "command" }}
{{- if and .Values.enmInitContainerEnv.enabled .Values.images.enmInitContainer.enabled  }}
        env:
{{ toYaml .Values.enmInitContainerEnv.env | indent 10 }}
{{- end }}
{{- end }}
{{- if .Values.extraInitContainers }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
{{- end }}
{{- end }}
      containers:
      - name: {{ .Values.service.name.main }}
        image: {{ template "eric-enm-kvstore-hc.registryUrl" . }}/{{ .Values.imageCredentials.repoPath }}/{{ index .Values "images" "eric-enm-kvstore-hc" "name" }}:{{ index .Values "images" "eric-enm-kvstore-hc" "tag" }}
        imagePullPolicy: {{ .Values.imageCredentials.pullPolicy }}
        command: ['catatonit', '--', '/stdout-redirect','-redirect','all','-logfile','/logs/kvstore-hc.log','-size','10','-rotate','10','-run',
                  'consul agent -advertise=$(POD_IP) -node=$(POD_NAME) {{ $serviceName := .Values.service.name.main }}{{ $replicaNumber := index .Values "global" "replicas-eric-enm-kvstore-hc" }}{{- if $replicaNumber -}}{{- range $index := until ( $replicaNumber | int) }} -retry-join={{ $serviceName }}-{{ $index }}.{{ $serviceName }}.$(NAMESPACE).svc.cluster.local{{ end }}{{ end }} -config-dir=/ericsson/consul/config']

{{- if  .Values.privileged.enabled }}
        securityContext:
          privileged: true
{{- end }}
{{- if or .Values.resources.requests.enabled .Values.resources.limits.enabled }}
        resources:
{{- if  .Values.resources.requests.enabled }}
          requests:
{{- if  .Values.resources.requests.memory }}
            memory: {{ .Values.resources.requests.memory | quote }}
{{- end }}
{{- if  .Values.resources.requests.cpu }}
            cpu: {{ .Values.resources.requests.cpu | quote }}
{{- end }}{{- end }}
{{- if  .Values.resources.limits.enabled }}
          limits:
{{- if  .Values.resources.limits.memory }}
            memory: {{ .Values.resources.limits.memory | quote }}
{{- end }}
{{- if  .Values.resources.limits.cpu }}
            cpu: {{ .Values.resources.limits.cpu | quote }}
{{- end }}
{{- end }}
{{- end }}
        env:
          - name: TZ
            value: {{ .Values.global.timezone }}
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 10 }}
{{- end }}
{{- if .Values.extraPorts.enabled }}
        ports:
{{ .Files.Get "appconfig/containerPorts.txt" | indent 10 }}
{{- end }}
{{- if .Values.startupProbe.enabled }}
        startupProbe:
          exec:
            command:
              - {{ .Values.startupProbe.command }}
              - {{ .Values.startupProbe.arguments }}
          initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
{{- end }}
{{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
              - {{ .Values.livenessProbe.command }}
              - {{ .Values.livenessProbe.arguments }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
{{- end }}
{{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          exec:
            command:
              - {{ .Values.readinessProbe.command }}
              - {{ .Values.readinessProbe.arguments }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
{{- end }}
{{- if or .Values.persistentVolumeClaim.enabled .Values.configMaps.enabled .Values.extraVolumeMounts.enabled }}
        volumeMounts:
{{- end }}
        {{- if has "stream" .Values.log.outputs }}
        {{- include "eric-enm-kvstore-hc.logshipper-storage-path" . | indent 8 }}
        {{- end }}
{{- if .Values.persistentVolumeClaim.enabled }}
        - name: {{ template "eric-enm-kvstore-hc.name" . }}
          mountPath: {{ .Values.persistentVolumeClaim.mountPath }}
{{- end }}
{{- if .Values.configMaps.enabled }}
        - name: configurations
          mountPath: {{ .Values.configMaps.mountPath }}
{{- end }}
{{- if .Values.extraVolumeMounts.enabled }}
{{ .Files.Get "appconfig/volumeMounts.txt" | indent 8 }}
{{- end }}
{{- if has "stream" .Values.log.outputs }}
{{- include "eric-enm-kvstore-hc.logshipper-container" . | indent 6 }}
{{- end }}
{{- if .Values.sidecarContainers }}
{{ toYaml .Values.sidecarContainers | indent 6 }}
{{- end }}
      volumes:
{{- if has "stream" .Values.log.outputs }}
  {{- include "eric-enm-kvstore-hc.logshipper-volume" . | indent 6 }}
{{- end }}
      - name: {{ template "eric-enm-kvstore-hc.name" . }}
        emptyDir: {}
{{- if .Values.configMaps.enabled }}
      - name: configurations
        configMap:
          name: {{ .Values.configMaps.name }}
{{- end }}
{{- if .Values.extraVolumes.enabled }}
{{ .Files.Get "appconfig/volumes.txt" | indent 6 }}
{{- end }}
{{- if include "eric-enm-kvstore-hc.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-enm-kvstore-hc.pullSecrets" . }}
{{- end }}
{{- if .Values.persistentVolumeClaim.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "eric-enm-kvstore-hc.name" . }}
      labels:
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
      accessModes:
        - {{ .Values.persistentVolumeClaim.accessMode }}
      storageClassName: {{ template "eric-enm-kvstore-hc.storageClass" . }}
      resources:
        requests:
          storage: {{ .Values.persistentVolumeClaim.size }}
{{- end }}
