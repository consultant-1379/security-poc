## eric-enm-kvstore-hc image version

global:
  registry:
    url: armdocker.rnd.ericsson.se
    pullSecret:
  replicas-eric-enm-kvstore-hc: 3
  ingress:
    enmHost:
  persistentVolumeClaim:
    storageClass:
  timezone:

productInfo:
  rstate: R28K
  productionDate: 2022-06-21T12:39:41Z
  revision: 2.27.9-1

images:
  eric-enm-kvstore-hc:
    name: eric-enm-kvstore-hc
    tag: 2.27.9-1
  waitInitContainer:
    enabled: false
    name: eric-enm-init-container
    tag: 1.27.9-1
    command: "[ '/bin/sh', '-c', 'bash /var/tmp/check_service.sh -s WAITSERVICE' ]"
  enmInitContainer:
    enabled: false
    name: eric-enm-init-container
    tag: 1.27.9-1
    command: "[ '/bin/sh', '-c', 'bash configure.sh;' ]"
  brAgent:
    name: eric-enm-kvstore-hc-bragent
    tag: 2.27.9-1
  logshipper:
    name: "eric-log-shipper"
    tag: "9.2.0-13"

imageCredentials:
  repoPath: proj-enm
  pullPolicy: Always
  registry:
    url:
    pullSecret:
  logshipper:
    registry:
      url:
      imagePullPolicy:
    repoPath: "proj-adp-log-released"

## Allows the specification of additional environment variables
extraEnv:
 - name: POD_IP
   valueFrom:
     fieldRef:
       fieldPath: status.podIP
 - name: NAMESPACE
   valueFrom:
     fieldRef:
       fieldPath: metadata.namespace
 - name: POD_NAME
   valueFrom:
     fieldRef:
       fieldPath: metadata.name

## Configure the service
service:
  name:
    main: kvstore
    legacy: consul
  annotations: {}
  labels: {}


# Service Ports to Expose, read from appconfig/servicePorts.txt
servicePorts:
  enabled: true

# Add container ports to open, read in from appconfig/ports.txt
extraPorts:
  enabled: true

## Configure resource requests and limits
resources:
  requests:
    enabled: true
    memory: "256Mi"
    cpu: "333m"
  limits:
    enabled: true
    memory: "512Mi"
    cpu: "1"
  brAgent:
    requests:
      cpu: "100m"
      memory: "64Mi"
    limits:
      cpu: "300m"
      memory: "256Mi"
  logshipper:
    limits:
      memory: "200Mi"
      cpu: "200m"
    requests:
      memory: "100Mi"
      cpu: "100m"

# ENV Wait for Application Dependencies.
waitInitContainerEnv:
  enabled: false

# ENM specific init container(ENM image)
enmInitContainerEnv:
  enabled: false

privileged:
  enabled: false

# Add initContainer if required
extraInitContainers:

## Additional containers to be added to the pod(s).
sidecarContainers:
#  - name: my-sidecar
#    image: nginx:latest

# Add in volumes(rwx etc), read from appconfig/volumes.txt
extraVolumes:
  enabled: true

# Add in volumeMounts(rwx etc), read from appconfig/volumeMounts.txt
extraVolumeMounts:
  enabled: true

# Custom config map, read from appconfig/configMaps.yaml
configMaps:
  enabled: true
  name: eric-enm-kvstore-hc-configmaps
  mountPath: /ericsson/consul/config

## Persist data to a persistent volume
  ## database data Persistent Volume Storage Class
persistentVolumeClaim:
  enabled: true
  storageClass: "erikube-rbd"
  accessMode: ReadWriteOnce
  size: 1Gi
  mountPath: /ericsson/data
  annotations: {}

# StartupProbe Health Check configuration.
startupProbe:
  enabled: true
  command: /usr/local/bin/health-check-functions.sh
  arguments: startup
  initialDelaySeconds: 10
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 20

# LivenessProbe Health Check configuration.
livenessProbe:
  enabled: true
  command: /usr/local/bin/health-check-functions.sh
  arguments: liveness
  initialDelaySeconds: 30
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 2

probes:
  logshipper:
    livenessProbe:
      initialDelaySeconds: 30
      timeoutSeconds: 10
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3

readinessProbe:
  enabled: true
  command: /usr/local/bin/health-check-functions.sh
  arguments: readiness
  initialDelaySeconds: 10
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 1
# Extra Annotations to be added to pod
podAnnotations: {}

## Tolerations for pod assignment
tolerations: []

## Affinity for pod assignment
affinity: requiredDuringSchedulingIgnoredDuringExecution

# Constrain which nodes your pod is eligible to be scheduled on
nodeAffinity: {}

priorityClassName: ""

## Node selector
nodeSelector: {}

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    partition: 0

brAgent:
  enabled: false
  broServiceName: eric-ctrl-bro
  backupTypeList:
## Pod Disruption Budget is an indicator of the number of disruptions that can be tolerated at a given time.
podDisruptionBudget:
  maxUnavailable: 1

log:
  # Creates LogShipper sidecar container to stream container logs to LogTransformer which stores the received logs in Elastic Search.
  # Supported values "stream" for LogShipper sidecar to be created in eric-enm-kvstore-hc.
  # If LogShipper sidecar container is not required, then set the "outputs" attribute value as empty or with any string except "stream".
  outputs:
    - "stream"
  logshipper:
    level: "info"

# Configuration for LogShipper sidecar.
logshipper:
  # Share volume name where logs are written.
  storagePath: "/logs"
  storageAllocation: "300Mi"
  harvester:
    closeTimeout: "5m"
    logData:
      - subPaths:
          - "kvstore-hc.log*"
      - subPaths:
          - "kvstore-br.log*"
      - subPaths:
          - "kvstore-health-check.log"
        logplane:
  # Kubernetes service name for accessing the Logstash host.
  logtransformer:
    host: eric-log-transformer