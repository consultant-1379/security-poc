## eric-enmsg-gossiprouter-eap7 image version

global:
  pullSecret:
  registry:
    url: armdocker.rnd.ericsson.se
  replicas-eric-enmsg-gossiprouter-eap7: 1
  ingress:
    enmHost:
  timezone:

# R-State of the product. R State should match helm chart version (3.1.0 -> R2A)
# To automate it when packaging the helm chart rstate can be generated
# and below value replaced with correct R-State
productRevision: R28K
labels: {}

# Number of replicas(pods) to deploy
replicas-eric-enmsg-gossiprouter-eap7: 1

images:
  eric-enm-monitoring:
    enabled: true
    name: eric-enm-monitoring-jre
    tag: 1.24.9-1
  eric-enmsg-gossiprouter-eap7:
    name: eric-enmsg-gossiprouter-eap7
    tag: 1.27.9-1
    command: "[ '/entrypoint.sh', '-bind_addr $(POD_IP) -port $(PORT)' ]"
  waitInitContainer:
    enabled: false
    name: eric-enm-init-container
    tag: 1.27.9-1
    command: "[ '/bin/sh', '-c', 'bash /var/tmp/check_service.sh -s WAITSERVICE' ]"
  enmInitContainer:
    enabled: false
    name: eric-enm-init-container
    tag: 1.27.9-1

imageCredentials:
  repoPath: proj-enm
  pullPolicy: Always
  pullSecret:
  registry:
    url:

## Allows the specification of additional environment variables
extraEnv:
- name: POD_IP
  valueFrom:
    fieldRef:
      fieldPath: status.podIP
- name: PORT
  value: "12003"
- name: GOSSIP_ROUTER_USAGE
  value: "eap7"

## Configure the service
service:
  name: gossiprouter-eap7
  sgname: gossiprouter
  annotations: {}
  labels: {}

# Service Ports to Expose, read from appconfig/servicePorts.txt
servicePorts:
  enabled: true

# Add container ports to open, read in from appconfig/ports.txt(disabled by default as should be included in docker file)
extraPorts:
  enabled: true

## Configure resource requests and limits
resources:
  requests:
    enabled: true
    memory: 4096Mi
  limits:
    enabled: true
    memory: 4096Mi
  monitoring:
    enabled: false
    requests:
      memory: 200Mi
      cpu: 50m
    limits:
      memory: 300Mi
      cpu: 200m

privileged:
  enabled: false

# Add initContainer if required
extraInitContainers:

## Additional containers to be added to the pod(s).
sidecarContainers:
  enabled: true

# Add in volumes(rwx etc), read from appconfig/volumes.txt
extraVolumes:
  enabled: true

# Add in volumeMounts(rwx etc), read from appconfig/volumeMounts.txt
extraVolumeMounts:
  enabled: true

# Custom config map, read from appconfig/configMaps.yaml
configMaps:
  enabled: false
  name: config-eric-enmsg-gossiprouter-eap7
  mountPath: MOUNTPOINT

  ## Persist data to a persistent volume
  ## database data Persistent Volume Storage Class
persistentVolumeClaim:
  enabled: false
  storageClass: "gp2"
  accessMode: ACCESSMODE
  size: SIZE
  mountPath: MOUNTPATH
  annotations: {}

# LivenessProbe Health Check configuration.
startupProbe:
  enabled: false
  command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
  arguments: --exec_agents
  initialDelaySeconds: 10
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 20
livenessProbe:
  enabled: false
  command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
  arguments: --exec_agents
  initialDelaySeconds: 30
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 1

readinessProbe:
  enabled: false
  command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
  arguments: --exec_agents
  initialDelaySeconds: 10
  periodSeconds: 30
  timeoutSeconds: 30
  failureThreshold: 1

# Extra Annotations to be added to pod
podAnnotations: {}

## Tolerations for pod assignment
tolerations: []

## Affinity for pod assignment
affinity: {}

# Constrain which nodes your pod is eligible to be scheduled on
nodeAffinity: {}

priorityClassName: ""

## Node selector
nodeSelector: {}

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 0

monitoring:
  enabled: true
  jmx_service_url: "service:jmx:rmi:///jndi/rmi://:18983/jmxrmi"
