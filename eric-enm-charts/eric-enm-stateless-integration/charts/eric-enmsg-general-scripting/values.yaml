## eric-enmsg-general-scripting image version

global:
  pullSecret:
  registry:
    url: armdocker.rnd.ericsson.se
  ingress:
    enmHost:
  ericIngress:
    enabled: false
  vips:
    general_scripting_vip_address:
  timezone:
  enmProperties:
    COM_INF_LDAP_ROOT_SUFFIX:
    COM_INF_LDAP_ADMIN_ACCESS:
    COM_INF_LDAP_ADMIN_CN:
    COM_INF_LDAP_PORT:
    dps_persistence_provider:
    LDAP_ADMIN_PASSWORD:
    LDAP_ADMIN_CN:
    postgresql01_admin_password:
    postgres_service: postgres
  replicas-eric-enmsg-general-scripting: 2
productNumber: CXC 174 2042
productRevision: R28K
labels: {}
# Number of replicas(pods) to deploy
replicas-eric-enmsg-general-scripting: 1
images:
  eric-enmsg-general-scripting:
    name: eric-enmsg-general-scripting
    tag: 1.27.9-1
  waitInitContainer:
    enabled: true
    name: eric-enm-init-container
    tag: 1.27.9-1
    command: "[ '/bin/sh', '-c', 'bash /var/tmp/check_service.sh -s gossiprouter-cache,gossiprouter-remoting,jms01,postgres,sps,nodecli'
      ]"
  eric-enm-httpd:
    name: eric-enmsg-general-scripting-httpd
    tag: 1.27.9-1
  eric-enm-monitoring:
    enabled: true
    name: eric-enm-monitoring-eap7
    tag: 1.27.9-1
  waitForCertificatesContainer:
    enabled: true
    name: enm-wait-for-certificates-container
    tag: 1.0.0-13
    command:
  eric-enm-general-scripting-helper:
    enabled: true
    name: gs-helper
    tag: 1.27.9-1
imageCredentials:
  repoPath: proj-enm
  pullPolicy: Always
  pullSecret:
  registry:
    url:
## Allows the specification of additional environment variables
# - name: MY_ROOT_PASSWORD
#   valueFrom:
#     secretKeyRef:
#       name: my-secret
#       key: my-root-password

eric-enm-common-helmchart-library:
  enabled: true
## Configure the service
service:
  name: general-scripting
  sgname: generalscripting
  annotations: {}
  labels:
  xmlMountPath: "/ericsson/credm/certReqMount"
  tlsMountPath: "/ericsson/credm/tlsMount"
ingress:
  enabled: true
persistentVolumeClaim:
  enabled: false
ingress_jboss_web_context:
  name: general-scripting-http
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
ingress_jboss_web_socket:
  name: general-scripting-ws
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.org/websocket-services: general-scripting
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
## Configure resource requests and limits
resources:
  requests:
    enabled: true
    memory: 2048Mi
    cpu: 2000m
  limits:
    enabled: true
    memory: 4048Mi
    cpu: 4000m
  httpd:
    enabled: false
    requests:
      memory:
      cpu:
    limits:
      memory:
      cpu:
  monitoring:
    enabled: false
    requests:
      memory:
      cpu:
    limits:
      memory:
      cpu:
monitoring:
  enabled: true
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9600"
privileged:
  capabilities:
    add:
    - SYS_NICE
# StartupProbe Health Check configuration.
startupProbe:
  enabled: true
  command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
  arguments: --exec_agents
  initialDelaySeconds: 10
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 20
# LivenessProbe Health Check configuration.
livenessProbe:
  enabled: true
  command: /ericsson/enm_healthcheck/bin/enm_healthcheck.py
  arguments: --exec_agents
  initialDelaySeconds: 30
  timeoutSeconds: 30
  periodSeconds: 30
  failureThreshold: 2
readinessProbe:
  enabled: true
  command: /app/healthcheck/get_state_gs.sh
  arguments: --exec_agents
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 2
# Termiation grace wait before force terminate pod
terminationGracePeriod:
  enabled: true
  seconds: 90
# Lifecycle hooks before terminating pod
lifecycle:
  handler:
    enabled: true
# Extra Annotations to be added to pod
podAnnotations: {}
## Tolerations for pod assignment
tolerations: []
## Affinity for pod assignment
affinity: requiredDuringSchedulingIgnoredDuringExecution
# Constrain which nodes your pod is eligible to be scheduled on
nodeAffinity: {}
priorityClassName: ""
## Node selector
nodeSelector: {}
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 0
    partition: 0
## Pod Disruption Budget is an indicator of the number of disruptions that can be tolerated at a given time.
podDisruptionBudget:
  maxUnavailable: 1
## sshd config parameters
sshdConfig:
  MaxStartups: 10:30:100
credmController:
  name: eric-enm-credm-controller
  port: 5001
jobs:
  jobAction: certrequest
  certRequest:
    imageName: enm-certrequestjob-container
    pullPolicy: Always
    tag: 1.0.0-13
    resources:
      requests:
        enabled: true
        cpu: 500m
        memory: 512Mi
      limits:
        enabled: true
        cpu: 1000m
        memory: 512Mi
general-scripting-helper:
  jobname: tfd-preinstall-job-hook
  container_name: pre-install
  service_account_user: "serviceaccount-tfd"
