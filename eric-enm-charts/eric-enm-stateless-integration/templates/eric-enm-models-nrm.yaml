apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.modelsNrmJob.name }}-job
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  activeDeadlineSeconds: {{ .Values.modelsNrmJob.timeout }}
  template:
    metadata:
      name: {{ .Values.modelsNrmJob.name }}-job
      labels:
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      restartPolicy: {{ .Values.modelsNrmJob.restartPolicy }}
{{- if include "stateless-integration.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "stateless-integration.pullSecrets" . }}
{{- end }}
{{- if .Values.images.waitInitContainer.enabled }}
      initContainers:
      - name: {{ .Values.modelsNrmJob.name }}-init
        image: {{ .Values.global.registry.url }}/{{ .Values.imageCredentials.repoPath }}/{{ index .Values "images" "waitInitContainer" "name" }}:{{ index .Values "images" "waitInitContainer" "tag" }}
        imagePullPolicy: {{ .Values.imageCredentials.pullPolicy }}
        command: {{ index .Values "images" "waitInitContainer" "command" }}
{{- end }}
{{- if or .Values.nodeSelector .Values.global.nodeSelector }}
      nodeSelector:
{{- if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.global.nodeSelector }}
{{ toYaml .Values.global.nodeSelector | indent 8 }}
{{- end }}
{{- end }}
{{- if or .Values.tolerations .Values.global.tolerations }}
      tolerations:
{{- if .Values.tolerations }}
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.global.tolerations }}
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
{{- end }}
      containers:
      - name: {{ .Values.modelsNrmJob.name }}
        image: {{ .Values.global.registry.url }}/{{ .Values.imageCredentials.repoPath }}/{{ index .Values "images" "eric-enm-models-nrm" "name" }}:{{ index .Values "images" "eric-enm-models-nrm" "tag" }}
        imagePullPolicy: {{ .Values.imageCredentials.pullPolicy }}
        env:
          - name: TZ
            value: {{ .Values.global.timezone }}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        resources:
          requests:
            memory: {{ .Values.modelsNrmJob.memoryRequest | default "768Mi" }}
            cpu: {{ .Values.modelsNrmJob.cpuRequest | default "500m" }}
          limits:
            memory: {{ .Values.modelsNrmJob.memoryLimit | default "1Gi" }}
            cpu: {{ .Values.modelsNrmJob.cpuLimit | default "1000m" }}
{{- if .Values.mdtPersistentVolumeClaim.enabled }}
        volumeMounts:
          - name: {{ .Values.mdtPersistentVolumeClaim.name }}
            mountPath: {{ .Values.mdtPersistentVolumeClaim.mountPath }}
      volumes:
        - name: {{ .Values.mdtPersistentVolumeClaim.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.mdtPersistentVolumeClaim.claimName }}
{{- end }}
