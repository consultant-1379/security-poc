{{- $g := fromJson (include "eric-oss-ingress-controller-nx.global" .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eric-oss-ingress-controller-nx.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "eric-oss-ingress-controller-nx.name" . }}
    app.kubernetes.io/version: {{ include "eric-oss-ingress-controller-nx.version" . }}
    chart: {{ template "eric-oss-ingress-controller-nx.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: controller
{{- include "eric-oss-ingress-controller-nx.config-labels" .| indent 4 }}
  annotations:
{{- include "eric-oss-ingress-controller-nx.product-info" . | indent 4 }}
{{- include "eric-oss-ingress-controller-nx.config-annotations" .| indent 4 }}
{{- include "eric-oss-ingress-controller-nx.config-labels" .| indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "eric-oss-ingress-controller-nx.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/component: controller
  {{- if .Values.updateStrategy }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "eric-oss-ingress-controller-nx.name" . }}
        app.kubernetes.io/version: {{ include "eric-oss-ingress-controller-nx.version" . }}
        helm.sh/chart: {{ template "eric-oss-ingress-controller-nx.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/component: controller
       {{- include "eric-oss-ingress-controller-nx.config-labels" .| indent 8 }}
    spec:
{{ include "eric-oss-ingress-controller-nx.affinity" . | indent 6 }}
         {{- if .Values.controller.dnsConfig }}
      dnsConfig: {{ .Values.controller.dnsConfig }}
         {{- end }}
         {{- if .Values.controller.hostname }}
      hostname: {{ .Values.controller.hostname }}
         {{- end }}
         {{- if .Values.controller.PriorityClassName }}
      PriorityClassName: {{ .Values.controller.PriorityClassName }}
         {{- end }}
         {{- if .Values.controller.sysctls }}
      sysctls: {{ .Values.controller.sysctls }}
            {{- range $sysctl, $value := .Values.controller.sysctls }}
            - name: {{ $sysctl | quote }}
              values: {{ $value | quote}}
          {{- end }}
         {{- end }}

      containers:
      - name: {{ template "eric-oss-ingress-controller-nx.name" . }}
        image: {{ template "eric-oss-ingress-controller-nx.ingresscontroller.imagePath" . }}
        imagePullPolicy: {{ template "eric-oss-ingress-controller-nx.registryImagePullPolicy" . }}
        {{- if .Values.controller.lifecycle }}
        lifecycle: {{ toYaml .Values.controller.lifecycle | nindent 12 }}
        {{- end }}
        {{- if has "stream" .Values.log.outputs }}
        command: ['/stdout-redirect','-redirect','all','-logfile','/logs/ingress.log','-size','10','-rotate','10','-run','/nginx-ingress-controller --publish-service= $(POD_NAMESPACE)/{{ include "eric-oss-ingress-controller-nx.name" . }} --election-id={{ .Values.controller.electionID }} --configmap=$(POD_NAMESPACE)/{{ include "eric-oss-ingress-controller-nx.name" . }} --update-status=false --ingress-class={{ .Values.ingressClass }} --watch-namespace=$(POD_NAMESPACE) --annotations-prefix=nginx.ingress.kubernetes.io --enable-ssl-passthrough --http-port={{ .Values.controller.containerPort.http.port }} --https-port={{ .Values.controller.containerPort.https.port }} --default-ssl-certificate=$(POD_NAMESPACE)/ingress-nginx-secret {{- include "eric-oss-ingress-controller-nx.extraArgs" . -}}']
        {{- else }}
        args:
          - /nginx-ingress-controller
          - --publish-service=$(POD_NAMESPACE)/{{ include "eric-oss-ingress-controller-nx.name" . }}
          - --election-id={{ .Values.controller.electionID }}
          - --configmap=$(POD_NAMESPACE)/{{ include "eric-oss-ingress-controller-nx.name" . }}
          - --controller-class={{ .Values.ingressClass }}
          - --watch-namespace=$(POD_NAMESPACE)
          - --annotations-prefix=nginx.ingress.kubernetes.io
          - --enable-ssl-passthrough
          - --http-port={{ .Values.controller.containerPort.http.port }}
          - --https-port={{ .Values.controller.containerPort.https.port }}
          - --default-ssl-certificate=$(POD_NAMESPACE)/ingress-nginx-secret
          {{- range $key, $value := .Values.extraArgs }}
            {{- /* Accept keys without values or with false as value */}}
            {{- if eq ($value | quote | len) 2 }}
          - --{{ $key }}
            {{- else }}
          - --{{ $key }}={{ $value }}
            {{- end }}
          {{- end }}
        {{- end }}

        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        env:
        {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value }}
        {{- end }}
          - name: TZ
            value: {{ $g.timezone | quote }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: LD_PRELOAD
            value: /usr/local/lib/libmimalloc.so
{{- if has "stream" .Values.log.outputs }}
        volumeMounts:
  {{- include "eric-oss-ingress-controller-nx.logshipper-storage-path" . | indent 10 }}
{{- end }}
      {{- if .Values.startupProbe.controller }}
        startupProbe: {{ toYaml .Values.startupProbe.controller | nindent 12 }}
      {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe.controller | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe.controller | nindent 10 }}
        ports:
          - name: metrics
            containerPort: {{ .Values.service.ports.metrics }}
            protocol: TCP
          {{- range $key, $value := .Values.controller.containerPort }}
          - name: {{ $key }}
            containerPort: {{ $value.port }}
            protocol: TCP
            {{- if $.Values.controller.useHostPorts }}
            hostPort: {{ $value.hostPort }}
            {{- end }}
          {{- end }}
        resources:
            {{- toYaml .Values.resources.controller | nindent 10 }}
{{- if has "stream" .Values.log.outputs }}
  {{- include "eric-oss-ingress-controller-nx.logshipper-container" . | indent 6 }}
{{- end }}
{{- if has "stream" .Values.log.outputs }}
      volumes:
  {{- include "eric-oss-ingress-controller-nx.logshipper-volume" . | indent 8 }}
{{- end }}
      {{- if (or .Values.nodeSelector $g.nodeSelector) }}
      nodeSelector:
        {{- if .Values.nodeSelector }}
        {{ toYaml .Values.nodeSelector | nindent 8 }}
        {{- else }}
        {{ toYaml $g.nodeSelector | nindent 8 }}
        {{- end }}
      {{- end }}
    {{- if include "eric-oss-ingress-controller-nx.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-oss-ingress-controller-nx.pullSecrets" . }}
    {{- end }}
     {{- if .Values.tolerations }}
      tolerations:
      {{ toYaml .Values.tolerations | nindent 8 }}
     {{- end }}
      serviceAccountName: {{ template "eric-oss-ingress-controller-nx.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.controller.terminationGracePeriodSeconds }}