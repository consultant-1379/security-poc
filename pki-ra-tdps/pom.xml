<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.ericsson.nms</groupId>
		<artifactId>integration</artifactId>
		<version>15.2.0.35</version> 
	</parent>
	<groupId>com.ericsson.oss.itpf.poc.security</groupId>
	<artifactId>pki-ra-tdps</artifactId>
	<version>1.0.2-SNAPSHOT</version>
	<packaging>pom</packaging>

	<url>http://www.ericsson.com</url>
	<organization>
		<name>Ericsson</name>
	</organization>

	<prerequisites>
		<maven>3.0.3</maven>
	</prerequisites>


	<name>[${project.artifactId}] JEE6 Project</name>

	<properties>
		<version.weld>1.1.10.Final</version.weld>
		<version.ejb>3.1</version.ejb>
		<version.jee>6</version.jee>
		<version.junit>4.10</version.junit>

		<version.jboss.as>6.2.4</version.jboss.as>
		<!-- Do not use JBoss community version use EAP 6. As JBoss version 7.1.1.Final 
			is being used by maven plugin(version.jboss-as-maven-plugin) -->
		<version.jboss.as.arquillian>7.1.3.Final</version.jboss.as.arquillian>
		<version.arquillian-junit-container>1.0.0.Final</version.arquillian-junit-container>
		<version.arquillian.bom>1.0.2.Final</version.arquillian.bom>
		<version.arquillian-weld-se-embedded>1.0.0.CR3</version.arquillian-weld-se-embedded>
		<version.jboss-as-maven-plugin>${version.jboss.as}</version.jboss-as-maven-plugin>

		<!-- Added for Junits -->
		<version.easymock>3.1</version.easymock>
		<version.mockitoall>1.9.5</version.mockitoall>
		<version.powermock-module>1.5.1</version.powermock-module>
		<version.powermock-api>1.5.1</version.powermock-api>
		<version.persistence-api>1.0.2</version.persistence-api>
		<version.geronimoJpa>1.0</version.geronimoJpa>
		<version.geronimoEJB>1.0</version.geronimoEJB>

		<!-- When you want to switch to new Service Framework version only change 
			value below -->
		<version.modeling.bom>16.14.2</version.modeling.bom>
		<version.modeling.annotation.processor>3.20.2</version.modeling.annotation.processor>
		<version.model.deployment.tool>7.18.1</version.model.deployment.tool>
		<version.service.framework>4.6.3</version.service.framework>
		<version.ServiceFrameworkBundle>1.0.20</version.ServiceFrameworkBundle>

		<project.ear.defaultLibBundleDir>lib</project.ear.defaultLibBundleDir>
		<!-- JBoss modules your service will automatically add to classpath -->
		<project.ear.Dependencies>org.slf4j</project.ear.Dependencies>

		<version.bouncycastle>1.67</version.bouncycastle>
		<version.pki.modeling.bom>1.0.1-SNAPSHOT</version.pki.modeling.bom>
		<version.manager.api>1.0.1-SNAPSHOT</version.manager.api>

		<version.pkicommon>1.0.1-SNAPSHOT</version.pkicommon>
		<!-- ENM Check Style version dependencies -->
		 <version.maven.checkstyle>2.15</version.maven.checkstyle>
		 <version.checkstyle>6.2</version.checkstyle>
		 <version.checkstyle.module>1.1.74</version.checkstyle.module>

		<!-- CDI and SPOCK dependency versions -->
		<version.groovy>2.4.11</version.groovy>
		<version.spock>1.0-groovy-2.4</version.spock>
		<version.cdi.test.support>1.1.62</version.cdi.test.support>
		<version.cglib>3.1</version.cglib>
		<version.objenesis>2.5.1</version.objenesis>
		<version.gmaven>1.4</version.gmaven>

		<!-- sonarqube requirement -->
		<sonar.tests />
        <sonar.coverage.jacoco.xmlReportPaths>target/coverage-reports/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<consolidated.jacoco.path>${project.basedir}/../target/jacoco.exec</consolidated.jacoco.path>
		<version.jacoco-maven-plugin>0.8.4</version.jacoco-maven-plugin>
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- here we specify what version of Service Framework we want to use. 
				All modules will be imported -->
			<dependency>
				<groupId>com.ericsson.oss.itpf.sdk</groupId>
				<artifactId>ServiceFrameworkJBossBOM</artifactId>
				<version>${version.service.framework}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.ericsson.oss.itpf.modeling</groupId>
				<artifactId>Modeling-BOM</artifactId>
				<version>${version.modeling.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${version.arquillian.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.ericsson.oss.itpf.poc.security</groupId>
				<artifactId>pki-modeling-bom</artifactId>
				<version>${version.pki.modeling.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.4,)</versionRange>
										<goals>
											<goal>analyze-dep-mgt</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-ear-plugin</artifactId>
										<versionRange>[2.7,)</versionRange>
										<goals>
											<goal>generate-application-xml</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.ericsson.maven.plugins</groupId>
										<artifactId>rstate-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>rstate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${version.jboss-as-maven-plugin}</version>
				<configuration>
					<filename>${project.parent.artifactId}.${project.packaging}</filename>
					<skip>false</skip>
				</configuration>
			</plugin>

			<plugin>
			<artifactId>maven-checkstyle-plugin</artifactId>
			<version>${version.maven.checkstyle}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${version.checkstyle}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.ericsson.cds</groupId>
                        <artifactId>checkstyle-module</artifactId>
                        <version>${version.checkstyle.module}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <consoleOutput>false</consoleOutput>
                    <logViolationsToConsole>false</logViolationsToConsole>
                    <configLocation>/cds/cds-checkstyle.xml</configLocation>
                    <violationSeverity>warning</violationSeverity>
                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
                </configuration>
                <executions>
                    <execution>
                        <configuration>
                            <!-- change this to true if you want the build to fail if there's warnings -->
                            <failOnViolation>false</failOnViolation>
                        </configuration>
                        <id>check-style</id>
                        <goals>
                            <goal>check</goal>
                            <goal>checkstyle-aggregate</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>

			<!-- For Groovy Test-->
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>${version.gmaven}</version>
				<configuration>
					<providerSelection>2.0</providerSelection>
					<source />
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.gmaven.runtime</groupId>
						<artifactId>gmaven-runtime-2.0</artifactId>
						<version>${version.gmaven}</version>
						<exclusions>
							<exclusion>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>${version.groovy}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>true</useSystemClassLoader>
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<useFile>false</useFile>
					<includes>
						<include>**/*Spec.java</include>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
		   <!-- End For Groovy Test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
					<configuration>
						<systemPropertyVariables>
							<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
						</systemPropertyVariables>
					</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${version.jacoco-maven-plugin}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-instrument</id>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
					<execution>
						<id>default-restore-instrumented-classes</id>
						<goals>
							<goal>restore-instrumented-classes</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<destFile>${consolidated.jacoco.path}</destFile>
					<dataFile>${consolidated.jacoco.path}</dataFile>
					<outputDirectory>${project.build.directory}/coverage-reports/jacoco</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ericsson.oss.itpf.sdk</groupId>
			<artifactId>sdk-core-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ericsson.oss.itpf.sdk</groupId>
			<artifactId>sdk-recording-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ericsson.oss.itpf.sdk</groupId>
			<artifactId>sdk-modeled-eventbus-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${version.easymock}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${version.mockitoall}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${version.powermock-module}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${version.powermock-api}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>${version.bouncycastle}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>${version.bouncycastle}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ericsson.oss.itpf.sdk</groupId>
			<artifactId>sdk-instrumentation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.agent</artifactId>
			<version>${version.jacoco-maven-plugin}</version>
			<classifier>runtime</classifier>
		</dependency>
	</dependencies>
	<modules>
		<module>pki-ra-tdps-api</module>
		<module>pki-ra-tdps-jar</module>
		<module>pki-ra-tdps-ejb</module>
		<module>pki-ra-tdps-war</module>
		<module>pki-ra-tdps-ear</module>
		<module>pki-ra-tdps-common-jar</module>
		<module>pki-ra-tdps-event-notification-handler</module>
		<module>ERICpkiratdps_CXP9032423</module>
		<module>pki-ra-tdps-local-service-api</module>
		<module>pki-ra-tdps-local-service-ejb</module>
	</modules>
</project>
