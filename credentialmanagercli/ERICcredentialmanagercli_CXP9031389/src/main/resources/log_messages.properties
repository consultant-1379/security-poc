#Messages used to log information
log.debug.start.app=Starting execution of credential manager
log.debug.end.app=Finalized the execution of credential manager
log.debug.app=Execution of credential manager with commands: [{}]


log.info.parse.start.commands=Parsing commands...[{}]
log.info.parse.end.commands=Parsing commands...[{}][Successful]

log.debug.parse.commands=Parsing commands: [{}]
 
log.info.validate.start.commands=Validating commands...
log.info.validate.end.commands=Validating commands...[Successful]

log.debug.validate.commands=Validating commands: [{}]

log.info.execute.start.command=Executing command ... {}
log.info.execute.end.command=Executing command ... {} [Successful]
log.info.execute.first.daily.run=Executing first time in the current day

 
log.info.read.start.appfile=Reading application information file... {}
log.info.read.end.appfile=Reading application information file... {} [Successful]

log.debug.read.appfile=Reading application information file: {}

log.debug.connect.start.eemanager=Connecting to Entity Manager on {}...
log.debug.connect.end.eemanager=Disconnecting from Entity Manager on {}...

log.debug.connect.eemanager=Connecting to Entity Manager on {} [{}]

log.debug.create.start.ee=Creating End Entity {}...
log.debug.create.end.ee=Creating End Entity {}...[Successful]

log.debug.create.ee=Creating End Entity {} [{}]

log.debug.create.start.keypair=Creating KeyPair...
log.debug.create.end.keypair=Creating KeyPair...[Successful]

log.debug.create.keypair=Created KeyPair: [{}]
log.debug.create.keypair.algorithm=KeyPair algorithm: [{}]
log.debug.create.keypair.size=KeyPair size: [{}]

log.info.create.start.csr=Creating Certificate Sign Request...
log.info.create.end.csr=Creating Certificate Sign Request...[Successful]

log.debug.create.csr=Creating Certificate Sign Request: [{}]
log.debug.create.csr.algorithm=Certificate Sign Request [algorithm]: [{}]
log.debug.create.csr.subject=Certificate Sign Request [Subject]: [{}]

log.debug.create.start.csrholder=Wrapping Certificate Sign Request in Certificate Sign Request Holder...
log.debug.create.end.csrholder=Wrapping Certificate Sign Request in Certificate Sign Request Holder...[Successful]

log.debug.create.csrholder=Wrapping Certificate Sign Request in Certificate Sign Request Holder: [{}]

log.debug.connect.start.ramanager=Connecting to Registration Authority Manager on {}...
log.debug.connect.end.ramanager=Disconnecting from Registration Authority Manager on {}...

log.debug.connect.ramanager=Connecting to Registration Authority Manager on {} [{}]

log.debug.send.start.csr=Sending Certificate Sign Request to be signed....
log.debug.send.end.csr=Sending Certificate Sign Request to be signed...[Successful] (Certificate retrieved)

log.debug.send.csr=Sent Certificate Sign Request: [{}]

log.info.create.start.certificate=Creating the Certificate based on the Certificate Sign Request...
log.info.create.end.certificate=Creating the Certificate based on the Certificate Sign Request...[Successful]

log.debug.create.certificate=Creating the Certificate based on the Certificate Sign Request: [{}]

log.debug.connect.start.camanager=Connecting to Certificate Authority Manager on {}...
log.debug.connect.end.camanager=Disconnecting from Certificate Authority Manager on {}...

log.debug.connect.camanager=Connecting to Certificate Authority Manager {} [{}]

log.info.get.start.ca=Getting Certificate of Certificate Authority...
log.info.get.end.ca=Getting Certificate of Certificate Authority...[Successful]

log.debug.get.ca=Getting Certificate of Certificate Authority: [{}]

log.info.create.start.keystore=Creating Key Store...
log.info.create.end.keystore=Creating Key Store {}...[Successful]

log.debug.create.keystore=Creating Key Store: [{}]
log.info.exist.keystore=Key Store already exists of file system. {} should be used

log.info.create.start.truststore=Creating Trust Store Entry...
log.info.create.end.truststore=Creating Trust Store Entry {}...[Successful]

log.debug.create.truststore=Creating Trust Store Entry: [{}]
log.info.exist.truststore=Trust Store already exists of file system. {} should be used

log.info.send.issueCertificate=Call IssueCertificate: [{}]
log.debug.send.issueCertificate.start=Call IssueCertificate START: [{}]
log.debug.send.issueCertificate.end=Call IssueCertificate END: [Successful]

log.info.mycertificate.start=CredentialManagerCLI certificate: start
log.info.mycertificate.noneedto=CredentialManagerCLI certificate: already present
log.info.mycertificate.success=CredentialManagerCLI certificate: SUCCESS [{}] 
log.info.mycertificate.end=CredentialManagerCLI certificate: end
log.debug.mycertificate.xmlmissing=CredentialManagerCLI certificate: XML file missing [{}]
log.debug.mycertificate.xmlparsing=CredentialManagerCLI certificate: XML file parse error [{}]
log.debug.mycertificate.notretrieve=CredentialManagerCLI certificate: Certificate not retrieve from PKI
log.debug.send.checkCertificateForCLI=CredentialManagerCLI certificate: check validity certificate {}
log.info.send.issueCertificateForCLI=CredentialManagerCLI certificate: issue certificate {}






