/*------------------------------------------------------------------------------
 *******************************************************************************
 * COPYRIGHT Ericsson 2020
 *
 * The copyright to the computer program(s) herein is the property of
 * Ericsson Inc. The programs may be used and/or copied only with written
 * permission from Ericsson Inc. or in accordance with the terms and
 * conditions stipulated in the agreement/contract under which the
 * program(s) have been supplied.
 *******************************************************************************
 *----------------------------------------------------------------------------*/
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.13 at 06:55:41 PM IST
//

package com.ericsson.oss.itpf.security.credmservice.api.model;

import javax.xml.bind.annotation.XmlEnumValue;

public enum CredentialManagerKeyUsageType {

    @XmlEnumValue("digitalSignature") DIGITAL_SIGNATURE("digitalSignature"), @XmlEnumValue("nonRepudiation") NON_REPUDIATION("nonRepudiation"),
    @XmlEnumValue("keyEncipherment") KEY_ENCIPHERMENT("keyEncipherment"), @XmlEnumValue("dataEncipherment") DATA_ENCIPHERMENT("dataEncipherment"),
    @XmlEnumValue("keyAgreement") KEY_AGREEMENT("keyAgreement"), @XmlEnumValue("keyCertSign") KEY_CERT_SIGN("keyCertSign"),
    @XmlEnumValue("cRLSign") CRL_SIGN("cRLSign"), @XmlEnumValue("encipherOnly") ENCIPHER_ONLY("encipherOnly"),
    @XmlEnumValue("decipherOnly") DECIPHER_ONLY("decipherOnly");
    private final String value;

    CredentialManagerKeyUsageType(final String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CredentialManagerKeyUsageType fromValue(final String v) {
        for (final CredentialManagerKeyUsageType c : CredentialManagerKeyUsageType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
