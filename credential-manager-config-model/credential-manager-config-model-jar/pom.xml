<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>credential-manager-config-model</artifactId>
		<groupId>com.ericsson.oss.itpf.poc.security</groupId>
		<version>1.0.2-SNAPSHOT</version>
	</parent>

	<artifactId>credential-manager-config-model-jar</artifactId>
	<packaging>jar</packaging>
	<name>[${project.parent.artifactId}] JAR module</name>
	<dependencies>
		<dependency>
			<groupId>com.ericsson.oss.itpf.sdk</groupId>
			<artifactId>sdk-core-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ericsson.oss.itpf.sdk</groupId>
			<artifactId>sdk-cache-api</artifactId>
			<scope>provided</scope>
			<!-- no need to specify version if imported Service Framework JBoss BOM -->
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- This copies the XML files into the model build directory. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-all-models-to-model-processing</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<includeEmptyDirs>false</includeEmptyDirs>
							<outputDirectory>../credential-manager-config-model-xml/model-build/etc/model</outputDirectory>
							<resources>
								<resource>
									<directory>handwritten_model_files</directory>
									<includes>
										<include>**/*.xml</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- This invokes the Annotation Processor. It runs against all the compiled classes part of this jar module. -->
			<plugin>
				<groupId>com.ericsson.oss.itpf.modeling.tools</groupId>
				<artifactId>model-processing-jar</artifactId>
				<executions>
					<execution>
						<id>process-models</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>modelproc</goal>
						</goals>
						<configuration>
							<modelBuildDir>model-build</modelBuildDir>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- This adds the model build directory as resource to the Maven build. This will cause the artifacts (XML, HTML files) to be picked up as part of 
				the packaging when the model jar is being created. -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-model-processing-dir-as-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>model-build</directory>
									<excludes>
										<exclude>**/*.gitignore</exclude>
										<exclude>assembly.xml</exclude>
									</excludes>
									<targetPath>modeling</targetPath>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- This invokes the Annotation Processor. It runs against all the compiled classes part of this api module. Note that the output of the AP is put 
				into the build directory of a different module (not this one here) -->
			<plugin>
				<groupId>com.ericsson.oss.itpf.modeling.tools</groupId>
				<artifactId>modeling-annotation-processor-jar</artifactId>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>annoproc</goal>
						</goals>
						<configuration>
							<modelBuildDir>../credential-manager-config-model-xml/model-build</modelBuildDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.ericsson.oss.itpf.modeling.tools
										</groupId>
										<artifactId>
											modeling-annotation-processor-jar
										</artifactId>
										<versionRange>
											[2.0.12,)
										</versionRange>
										<goals>
											<goal>annoproc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>regex-property</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
